import tkinter as tk
from tkinter import messagebox

class StudentGrades:
    def __init__(self, root):
        self.root = root
        self.root.title("Student Grades Manager")
        self.root.geometry("400x400")

        self.grades = {}

        self.name_label = tk.Label(root, text="Student Name:")
        self.name_label.pack()
        self.name_entry = tk.Entry(root)
        self.name_entry.pack()

        self.subject_label = tk.Label(root, text="Subject:")
        self.subject_label.pack()
        self.subject_entry = tk.Entry(root)
        self.subject_entry.pack()

        self.grade_label = tk.Label(root, text="Grade:")
        self.grade_label.pack()
        self.grade_entry = tk.Entry(root)
        self.grade_entry.pack()

        self.add_button = tk.Button(root, text="Add Grade", command=self.add_grade)
        self.add_button.pack()

        self.calculate_button = tk.Button(root, text="Calculate Average", command=self.calculate_average)
        self.calculate_button.pack()

        self.result_label = tk.Label(root, text="")
        self.result_label.pack()

    def add_grade(self):
        name = self.name_entry.get()
        subject = self.subject_entry.get()
        try:
            grade = float(self.grade_entry.get())
            if name not in self.grades:
                self.grades[name] = {}
            self.grades[name][subject] = grade
            messagebox.showinfo("Success", f"Added grade for {subject}")
        except ValueError:
            messagebox.showerror("Error", "Please enter a valid grade")

    def calculate_average(self):
        name = self.name_entry.get()
        if name in self.grades:
            total = sum(self.grades[name].values())
            count = len(self.grades[name])
            average = total / count
            gpa, letter_grade = self.calculate_gpa(average)
            self.result_label.config(text=f"Average Grade: {average:.2f}\nGPA: {gpa:.2f}\nLetter Grade: {letter_grade}")
        else:
            messagebox.showerror("Error", "No grades found for this student")

    def calculate_gpa(self, average):
        if average >= 90:
            return average/9, 'A'
        elif average >= 80:
            return average/9, 'B'
        elif average >= 70:
            return average/9, 'C'
        elif average >= 60:
            return average/9, 'D'
        else:
            return average/9, 'F'

if __name__ == "__main__":
    root = tk.Tk()
    app = StudentGrades(root)
    root.mainloop()
